You are given a string S, and you have to find all the amazing substrings of S.

An amazing Substring is one that starts with a vowel (a, e, i, o, u, A, E, I, O, U).

Output

Return a single integer X mod 10003, here X is the number of Amazing Substrings in given the string.


int Solution::solve(string A) {
    int i,n=A.length(),ans=0;
    for(i=0;i<n;i++){
        if(A[i]=='a'|| A[i]=='e' ||  A[i]=='i' || A[i]=='o' || A[i]=='u' || A[i]=='A' || A[i]=='E' || A[i]=='I' || A[i]=='O' || A[i]=='U'){
            
            ans+=(n-i);
            ans%=10003;
        }
    }
    return ans;
}
