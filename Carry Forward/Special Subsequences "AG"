Problem Description
You have given a string A having Uppercase English letters.

You have to find how many times subsequence "AG" is there in the given string.

NOTE: Return the answer modulo 109 + 7 as the answer can be very large.



Problem Constraints
1 <= length(A) <= 105

Brute Force

int Solution::solve(string A) {
    int i,j,n=A.length(),ans=0,count=0,mod=1000000007;
    for(i=0;i<n;i++){
       if(A[i]=='A'){
           for(j=i+1;j<n;j++){
               if(A[j]=='G'){
                   count+=1;
               }
           }
           ans=(ans%mod+count%mod)%mod;
           count=0;
       } 
    }
    return ans;
}

TC: O(N^2) SC: O(1)

This solution won't work as lenA<=10^5 thus will exceed time limit.


Efficient solution

public class Solution {
    public int solve(String s) {
        int i,n=s.length(),count=0,ans=0;
        int  modulo = 1000000007;
        for(i=0;i<n;i++){
            if(s.charAt(i)=='A'){
                count+=1;
            }
            else if(s.charAt(i)=='G'){
                ans=(ans%modulo+count%modulo)%modulo;
            }
        }
       
         return ans;
    }
}

//Keep on counting As and when you get G add this count to ans. ABCBDBBGAAAHG==> at first g we have count of a as one and it is correct as only one AG sequence can be there for this g but the second g has count of a as 4 and this is crrect because this G can form subsequence AG with alll o the 4 As present.
