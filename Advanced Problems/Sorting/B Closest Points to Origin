Problem Description
We have a list A of points (x, y) on the plane. Find the B closest points to the origin (0, 0).

Here, the distance between two points on a plane is the Euclidean distance.

You may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in.)

NOTE: Euclidean distance between two points P1(x1, y1) and P2(x2, y2) is sqrt( (x1-x2)2 + (y1-y2)2 ).

TC: O(NlogN) SC:O(1): As question requires space.


bool compare(vector<int>a,vector<int>b){
    long first=(a[0]*a[0])+(a[1]*a[1]);
    long second=(b[0]*b[0])+(b[1]*b[1]);
    return (first<second);
}
vector<vector<int> > Solution::solve(vector<vector<int> > &A, int B) {
    sort(A.begin(),A.end(),compare);
    vector<vector<int> >result;
    int i;
    for(i=0;i<B;i++){
        result.push_back(A[i]);
    }
    return result;
}
