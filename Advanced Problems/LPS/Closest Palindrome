Problem Description
Groot has a profound love for palindrome which is why he keeps fooling around with strings.
A palindrome string is one that reads the same backward as well as forward.

Given a string A of size N consisting of lowercase alphabets, he wants to know if it is possible to make the given string a palindrome by changing exactly one of its character.

Problem Constraints
1 <= N <= 105

Input Format
The first and only argument is a string A.

Output Format
Return the string YES if it is possible to make the given string a palindrome by changing exactly 1 character. Else, it should return the string NO.

Example Input
Input 1:

 A = "abbba"
Input 2:

 A = "adaddb"


Example Output
Output 1:

 "YES"
 
//Code: Edge Case: 1) abba:Nothing can be changed so "NO" 2) abbba ==>Midle b can be changed to any element, it does not matter, so answer is Yes.
TC:O(N) SC:O(1)
 string Solution::solve(string A) {
      int n=A.length(),count=0;
    int l=0,r=n-1;
    while(l<r){
      if(A[l]!=A[r]){
          count++;
      }
      if(count>=2){
          return "NO";
      }
      l++;
      r--;
    }
    if(count==0 && n%2==0){
       return "NO";
    }
    return "YES";
}
