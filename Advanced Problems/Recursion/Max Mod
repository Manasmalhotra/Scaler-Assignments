Problem Description
Given an array A of size N, Groot wants you to pick 2 indices i and j such that

1 <= i, j <= N
A[i] % A[j] is maximum among all possible pairs of (i, j).
Help Groot in finding the maximum value of A[i] % A[j] for some i, j.


Brute Force:
int Solution::solve(vector<int> &A) {
    int i,j,n=A.size(),ans,maxx=INT_MIN;
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            ans=A[i]%A[j];
            maxx=max(maxx,ans);
        }
    }
    return maxx;
}

Approach 2: Sort the array
TC:O(NlogN)
A = [1, 2, 44, 3], Ans=3
A = [2, 6, 4], Ans=4

Observe here the answer is always second largest number as second largest%largest==second largest

Approach 3: Find max and second max in a single iteration and give answer

int Solution::solve(vector<int> &A) {
    int i,j,n=A.size(),ans,maxx=INT_MIN;
    int first=0,second=0;
    for(i=0;i<n;i++){
       if(first<A[i]){
           second=first;
           first=A[i];
       }
       else if(first!=A[i] && second<A[i]){
           second=A[i];
       }
    }
    return second%first;
}


