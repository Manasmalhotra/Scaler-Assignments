Problem Description
Given an array of positive integers A, check and return whether the array elements are consecutive or not.
NOTE: Try this with O(1) extra space.



Problem Constraints
1 <= length of the array <= 100000
1 <= A[i] <= 10^9

Approach 1: Sort the array and check
TC:O(NlogN)

int Solution::solve(vector<int> &A) {
    sort(A.begin(),A.end());
    int i,n=A.size();
    for(i=0;i<n-1;i++){
        if(A[i]+1!=A[i+1]){
            return 0;
        }
    }
    return 1;
}

Approach 2: Use hashmap and travese it to see if conditions hold.

TC:O(N) SC:O(1) : Beacuse Tc of operations in unordered map is O(1)

int Solution::solve(vector<int> &A) {
    unordered_map<int,int>maps;
    int i,n=A.size(),maxx=INT_MIN;
    for(i=0;i<n;i++){
        maps[A[i]]+=1;
        maxx=max(maxx,A[i]);
    }

    for(i=0;i<n;i++){
        if(maps[A[i]]>1){
            return 0;
        }
        if(A[i]!=maxx && maps.find(A[i]+1)==maps.end()){
            return 0;
        }
    }
    return 1;
}
