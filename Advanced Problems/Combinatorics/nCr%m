Problem Description
Given three integers A, B, and C, where A represents n, B represents r, and C represents m, find and return the value of nCr % m where nCr % m = (n!/((n-r)!*r!))% m.

x! means factorial of x i.e. x! = 1 * 2 * 3... * x.

Recursive Solution

int func(int A,int B){
if(A==0 || A==B){
return 1;
}
return func(A-1,B)+func(A-1,B-1);
}

TC: O(2^N)As we have two parts of tree at each node.


Memoization

TC: O(A*B) SC:O(A*B)
Using the property of combinations nCr=n-1Cr +n-1Cr-1. Proof of the same is there in lecture and notes notebook.

int Solution::solve(int A, int B, int C) {
  vector<vector<long> >mat(A+1,vector<long>(B+1,0));
  long i,j;
  
  mat[0][0]=1; // For getting accurate 1C1.
  for(i=1;i<=A;i++){
      mat[i][0]=1;
      for(j=1;j<=B;j++){
          if(j>i){
              mat[i][j]=0;
          }
          else{
              mat[i][j]=(mat[i-1][j]%C+mat[i-1][j-1]%C)%C;
          }
      }
    
  }
  return mat[A][B];
}
