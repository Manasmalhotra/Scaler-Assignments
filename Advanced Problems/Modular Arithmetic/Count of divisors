Problem Description
Given an array of integers A, find and return the count of divisors of each element of the array.

NOTE: The order of the resultant array should be the same as the input array.

Problem Constraints
1 <= length of the array <= 100000
1 <= A[i] <= 106

Brute Force: For each element count number of factors in time sqrt(A[i]) and thus TC: N*(max(sqrt(A[i])
N=10^6 and A[i]=10^5 Thus we can exceed the given time.

Optimised for each element in range 1 to maxx element of the array store the number of factors and return the count for array elements
TC:O(Maxx)*O(Log(Maxx))=O(Maxx*log(Maxx))

vector<int> Solution::solve(vector<int> &A) {
    int i,j,n=A.size(),maxx=INT_MIN;
    vector<int>result(n,0);

    for(i=0;i<n;i++){
      maxx=max(maxx,A[i]);
    }
    vector<int>factors(maxx+1,1);
    for(i=2;i<=maxx;i++){
        for(j=i;j<=maxx;j+=i){
            factors[j]+=1;
        }
    }

    for(i=0;i<n;i++){
        result[i]+=factors[A[i]];
    }
    return result;
}
