Problem Description

Given a matrix of integers A of size N x M and an integer B.
In the given matrix every row and column is sorted in increasing order. Find and return the position of B in the matrix in the given form:
If A[i][j] = B then return (i * 1009 + j)
If B is not present return -1.

Note 1: Rows are numbered from top to bottom and columns are numbered from left to right.
Note 2: If there are multiple B in A then return the smallest value of i*1009 +j such that A[i][j]=B.

Brute Force: Traaverse complete matrix and return as soon as you find the element. TC:O(N*M) SC:O(1)

Better Approach: start traverse from top right corner
TC: O(N+M)
SC:O(1)

int Solution::solve(vector<vector<int> > &A, int B) {
    int n=A.size(),m=A[0].size(),minn=INT_MAX;
    int i=0,j=m-1;
    while(i<n && j>=0){
        if(A[i][j]>B){
            j--;
        }
        else if(A[i][j]<B){
            i++;
        }
        else{
            minn=min(minn,((i+1)*1009)+(j+1));
            if(A[i][j-1]==B){
                j--;
            }
            else{
                break;
            }
        }
    }
    if(minn==INT_MAX){
        return -1;
    }
    return minn;
}
