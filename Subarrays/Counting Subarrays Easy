Counting Subarrays Easy

Problem Description
Given an array A of N non-negative numbers and a non-negative number B,
you need to find the number of subarrays in A with a sum less than B.
We may assume that there is no overflow.



Problem Constraints
1 <= N <= 103

1 <= A[i] <= 1000

1 <= B <= 107

Approach: Sliding Window, use the fact that number of subarray equal to number of elements involved.

int Solution::solve(vector<int> &A, int B) {
    int i=0,n=A.size(),count=0,sum=0;
    for(i=0;i<n;i++){
        sum+=A[i];
        if(sum>=B){
            sum-=A[i];
            break;
        }
        count+=i+1;
    }
    int end=i,start=0;
    while(end<n){
        sum+=A[end];
        while(start<n && sum>=B){
            sum-=A[start];
            start++;
        }
        count+=end-start+1;
        end++;
    }
    return count;
}
