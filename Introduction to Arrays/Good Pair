Given an array A and an integer B. A pair(i, j) in the array is a good pair if i != j and (A[i] + A[j] == B). Check if any good pair exist or not.

Approach 1

public class Solution {
    public int solve(int[] A, int B) {
        int i,j,n=A.length;
        for(i=0;i<n;i++){
            for(j=0;j<n;j++){
                if(i!=j && A[i]+A[j]==B){
                    return 1;
                }
            }
        }
        return 0;
    }
}


Approach 2(Slight better)

public class Solution {
    public int solve(int[] A, int B) {
        int i,j,n=A.length;
        for(i=0;i<n;i++){
            for(j=i+1;j<n;j++){
                if(A[i]+A[j]==B){
                    return 1;
                }
            }
        }
        return 0;
    }
}

Approach 3 O(N)

public class Solution {
    public int solve(int[] A, int B) {
        int i,n=A.length;
        Map<Integer,Integer>maps=new HashMap<>();
        for(i=0;i<n;i++){
           if(maps.containsKey(A[i])){
               maps.put(A[i],maps.get(A[i])+1);
           }
           else{
               maps.put(A[i],1);
           }
        }

        for(i=0;i<n;i++){
           if(B-A[i]==A[i]){
               if(maps.get(A[i])>1){
                   return 1;
               }
           }
           else{
               if(maps.containsKey(B-A[i])){
                   return 1;
               }
           }
        }
        return 0;
    }
}
