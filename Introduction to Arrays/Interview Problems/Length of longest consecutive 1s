Given a binary string A. It is allowed to do at most one swap between any 0 and 1. Find and return the length of the longest consecutive 1â€™s that can be achieved.

TC: O(N) SC: O(1)

int Solution::solve(string A) {
    int i,n=A.length(),count=0;
    for(i=0;i<n;i++){
        if(A[i]=='1'){
            count+=1;
        }
    }
    if(count==0 || count==n){
        return count;
    }
    int ans=1;
    for(i=0;i<n;i++){
        if(A[i]=='0'){
           int j,l=0,r=0;
           for(j=i-1;j>=0;j--){
               if(A[j]=='1'){l++;}
               else{
                   break;
               }
           }
           for(j=i+1;j<n;j++){
               if(A[j]=='1'){
                   r++;
               }
               else{
                   break;
               }
           }
           if(count>l+r){
               ans=max(ans,l+r+1);
           }
           else{
               ans=max(ans,l+r);
           }
        }
    }
    return ans;
}
