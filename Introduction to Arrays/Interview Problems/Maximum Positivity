Problem Description
Given an array of integers A, of size N.

Return the maximum size subarray of A having only non-negative elements. If there are more than one such subarray, return the one having the smallest starting index in A.

NOTE: It is guaranteed that an answer always exists.


//Brute Force

vector<int> Solution::solve(vector<int> &A) {
    int i,j,n=A.size(),ans=0,len=0,start=0;
    for(i=0;i<n;i++){
        if(A[i]>=0){
        len=1;    
        for(j=i+1;j<n;j++){
          if(A[j]<0){
              break;
          }
          len+=1;
        }
        if(ans<len){
            ans=len;
            start=i;
        }
    }
    }
    vector<int>result;
    for(i=start;i<start+ans;i++){
        result.push_back(A[i]);
    }
    return result;
}


TC:O(N)

vector<int> Solution::solve(vector<int> &A) {
    int i,n=A.size(),start=0,count=0,maxx=0,mstart,mend;
    vector<int>result;
    for(i=0;i<n;i++){
        if(A[i]>=0){
            count++;
        }
        else{
            if(count>maxx){
                maxx=count;
                count=0;
                mstart=start;
                mend=i-1;

            }
            start=i+1;
            count=0;
        }
    }
    if(count>maxx){
        mstart=start;
        mend=n-1;
    }
    for(i=mstart;i<=mend;i++){
        result.push_back(A[i]);
    }
    return result;
}
