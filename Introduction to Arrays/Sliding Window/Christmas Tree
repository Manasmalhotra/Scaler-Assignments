You are given an array A consisting of heights of Christmas trees and an array B of the same size consisting of the cost of each of the trees (Bi is the cost of tree Ai, where 1 ≤ i ≤ size(A)), and you are supposed to choose 3 trees (let's say, indices p, q, and r), such that Ap < Aq < Ar, where p < q < r.
The cost of these trees is Bp + Bq + Br.

You are to choose 3 trees such that their total cost is minimum. Return that cost.

If it is not possible to choose 3 such trees return -1.

Approach : From each index go to left and right elements considering ith element as center.

int Solution::solve(vector<int> &A, vector<int> &B) {
    int i,j,n=A.size(),cost=INT_MAX,minn1,minn2;
    
    for(i=0;i<n;i++){
        minn1=INT_MAX;
        minn2=INT_MAX;

        for(j=i-1;j>=0;j--){
            if(A[j]<A[i] && B[j]<minn1){
                minn1=B[j];
            }
        }
        
        for(j=i+1;j<n;j++){
            if(A[i]<A[j] && B[j]<minn2){
                minn2=B[j];
            }
        }

        if(minn1==INT_MAX || minn2==INT_MAX){
           continue;
        }
        else{
      \
              cost=min(cost,minn1+minn2+B[i]);
        }
    }
    if(cost==INT_MAX){
        return -1;
    }
    return cost;
}
