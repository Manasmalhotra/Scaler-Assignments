Problem Description
Given an integer array A of size N and an integer B, you have to print the same array after rotating it B times towards the right.


import java.lang.*;
import java.util.*;

public class Main {
    public static void reversepart(int[] arr,int l,int r){
        int temp;
        while(l<r){
            temp=arr[l];
            arr[l]=arr[r];
            arr[r]=temp;
            l++;
            r--;
        }
    }
    public static void main(String[] args) {
      
        int i,n;
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        int []arr=new int[n];
        for(i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int k;
        k=sc.nextInt();
        k=k%n;
        if(k!=0){
        reversepart(arr,0,n-1);
        reversepart(arr,0,k-1);
        reversepart(arr,k,n-1); 
        }    

        for(i=0;i<n;i++){
            System.out.print(arr[i]+" ");
        }
    }
}

TESTCASES

1 2 3 4 5 k=0
Ans= 1 2 3 4 5

1 2 3 4 5 k=5
Ans==> 2 3 4 5 1 k=1
       3 4 5 1 2 k=2
       4 5 1 2 3 k=3
       5 1 2 3 4 k=4
       1 2 3 4 5 k=5===>Ans
       2 3 4 5 1 k=6
       
Test case [1,2] k=1
Reverse array: 2 1
Reverse 0 to k-1(1-1==0) Therefore nothing will change.
Reverse k to n-1 (1,2-1)=(1,1) Therefore, nothing will change.
Hence ans=(2,1)
       
1 2 3 4 5 k=6
2 3 4 5 1
The 2nd and 3rd testcase tell us that we should proceed after updating k as k%n where n is size of array

1 2 3 4 5 k=2
3 4 5 1 2 

Here we see that the backward portion that is 2-N-1 comes ahead and the front portion goes to the back. Simple way to acheive this===> Reverse the array

Reverse ==> 5 4 3 2 1
Now see we have got the parts in position
Reverse 543 and 21

3 4 5 1 2 ===Answer

So Generalizing this approach we have :
Step1: Reverse the array
Step2: Reverse 0 to k-1
Step 3: Reverse k to n-1
